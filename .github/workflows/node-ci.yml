name: Node-CI

on: push

jobs:
  node-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: actions/setup-node@v1
        name: Use Node.js ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn --production=false --frozen-lockfile

      - name: 💅🏼 Lint
        run: |
          yarn lint
          yarn ci:lint-docs

  node-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: actions/setup-node@v1
        name: Use Node.js ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn --production=false --frozen-lockfile

      - name: 🔨 Build
        run: yarn build --verbose

  node-e2e-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: actions/setup-node@v1
        name: Use Node.js ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn --production=false --frozen-lockfile

      - name: 🔨 Build
        run: yarn build --verbose

      - name: E2E tests
        run: yarn test:ci --testPathPattern react-server address

  node-unit-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
        name: Checkout

      - uses: actions/setup-node@v1
        name: Use Node.js ${{ matrix.node-version }}
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory
        id: yarn-cache-get-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        name: Restore yarn cache
        with:
          path: ${{ steps.yarn-cache-get-dir.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: 📦 Install dependencies
        run: yarn --production=false --frozen-lockfile

      - name: Unit tests
        run: yarn test:ci --testPathIgnorePatterns react-server address
